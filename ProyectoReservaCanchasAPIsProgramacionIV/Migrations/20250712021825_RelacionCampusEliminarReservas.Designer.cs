// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoReservaCanchasAPIsProgramacionIV.Data;

#nullable disable

namespace ProyectoReservaCanchasAPIsProgramacionIV.Migrations
{
    [DbContext(typeof(BaseDatos_ReservarCanchas_ProyectoProgramacionIV))]
    [Migration("20250712021825_RelacionCampusEliminarReservas")]
    partial class RelacionCampusEliminarReservas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Calendario", b =>
                {
                    b.Property<int>("CalendarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalendarioId"));

                    b.Property<int>("CanchaId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotasDetallada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaUdlaId")
                        .HasColumnType("int");

                    b.HasKey("CalendarioId");

                    b.HasIndex("CanchaId");

                    b.HasIndex("PersonaUdlaId");

                    b.ToTable("Calendario");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Campus");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Cancha", b =>
                {
                    b.Property<int>("CanchaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CanchaId"));

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CanchaId");

                    b.HasIndex("CampusId");

                    b.ToTable("Cancha");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FacultadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FacultadId");

                    b.ToTable("Carrera");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Facultad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.ToTable("Facultad");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.PersonaUdla", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BannerId"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("BannerId");

                    b.ToTable("PersonaUdla");

                    b.HasDiscriminator<string>("TipoPersona").HasValue("PersonaUdla");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Administrador", b =>
                {
                    b.HasBaseType("ProyectoReservaCanchasAPIsProgramacionIV.Models.PersonaUdla");

                    b.Property<int>("FacultadId")
                        .HasColumnType("int");

                    b.HasIndex("FacultadId");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Estudiante", b =>
                {
                    b.HasBaseType("ProyectoReservaCanchasAPIsProgramacionIV.Models.PersonaUdla");

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.HasIndex("CarreraId");

                    b.HasDiscriminator().HasValue("Estudiante");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.PersonalMantenimiento", b =>
                {
                    b.HasBaseType("ProyectoReservaCanchasAPIsProgramacionIV.Models.PersonaUdla");

                    b.HasDiscriminator().HasValue("PersonalMantenimiento");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Calendario", b =>
                {
                    b.HasOne("ProyectoReservaCanchasAPIsProgramacionIV.Models.Cancha", "Cancha")
                        .WithMany("Calendarios")
                        .HasForeignKey("CanchaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoReservaCanchasAPIsProgramacionIV.Models.PersonaUdla", "PersonaUdla")
                        .WithMany()
                        .HasForeignKey("PersonaUdlaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancha");

                    b.Navigation("PersonaUdla");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Cancha", b =>
                {
                    b.HasOne("ProyectoReservaCanchasAPIsProgramacionIV.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Carrera", b =>
                {
                    b.HasOne("ProyectoReservaCanchasAPIsProgramacionIV.Models.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Facultad", b =>
                {
                    b.HasOne("ProyectoReservaCanchasAPIsProgramacionIV.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Administrador", b =>
                {
                    b.HasOne("ProyectoReservaCanchasAPIsProgramacionIV.Models.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Estudiante", b =>
                {
                    b.HasOne("ProyectoReservaCanchasAPIsProgramacionIV.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("ProyectoReservaCanchasAPIsProgramacionIV.Models.Cancha", b =>
                {
                    b.Navigation("Calendarios");
                });
#pragma warning restore 612, 618
        }
    }
}
